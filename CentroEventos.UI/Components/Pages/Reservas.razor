@page "/reservas"
@inject ListarReservasUseCase ObtenerReservasUseCase
@inject SesionUsuario Sesion
@inject IServicioAutorizacion ServicioAutorizacion

<h3>Reservas</h3>

@if (usuario is null)
{
    <p>Debés iniciar sesión para ver las reservas.</p>
}
else if (reservas is null)
{
    <p>Cargando reservas...</p>
}
else
{
    if (tienePermisoReservaAlta)
    {
        <button class="btn btn-success mb-3">Nueva Reserva</button>
    }

    foreach (var reserva in reservas)
    {
        <div class="card mb-3 p-3 border">
            <p><strong>ID del Evento:</strong> @reserva.EventoDeportivoId</p>
            <p><strong>ID del Usuario:</strong> @reserva.PersonaId</p>
            <p><strong>Fecha de Reserva:</strong> @reserva.FechaAltaReserva.ToString("dd/MM/yyyy")</p>

            @if (tienePermisoReservaModificacion)
            {
                <button class="btn btn-primary me-2">Modificar</button>
            }
            @if (tienePermisoReservaBaja)
            {
                <button class="btn btn-danger">Eliminar</button>
            }
        </div>
    }
}

@code {
    private List<Reserva>? reservas;
    private Usuario? usuario;

    private bool tienePermisoReservaAlta;
    private bool tienePermisoReservaBaja;
    private bool tienePermisoReservaModificacion;

    protected override void OnInitialized()
    {
        usuario = Sesion.Usuario;

        if (usuario is null)
            return;

        reservas = ObtenerReservasUseCase.Ejecutar();

        tienePermisoReservaAlta = ServicioAutorizacion.PoseeElPermiso(usuario.Id, Permiso.ReservaAlta);
        tienePermisoReservaBaja = ServicioAutorizacion.PoseeElPermiso(usuario.Id, Permiso.ReservaBaja);
        tienePermisoReservaModificacion = ServicioAutorizacion.PoseeElPermiso(usuario.Id, Permiso.ReservaModificacion);
    }
}
